{
  "stats": {
    "suites": 11,
    "tests": 28,
    "passes": 28,
    "pending": 0,
    "failures": 0,
    "start": "2019-01-10T09:04:26.891Z",
    "end": "2019-01-10T09:04:34.629Z",
    "duration": 7738,
    "testsRegistered": 28,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b23c773e-1f17-4855-9817-b16f78c8cf69",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "b35e2de6-5ab9-45e1-b420-73ab3ea62a3d",
        "title": "onBlur_username测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\log.test.js",
        "file": "\\test\\log.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "元素register隐藏且login-username未输入时应返回false且login-username-reminder应设为请输入用户名",
            "fullTitle": "onBlur_username测试 元素register隐藏且login-username未输入时应返回false且login-username-reminder应设为请输入用户名",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register').classList.add('hide');\nvar result = onBlur_username();\nexpect(result).to.be.equal(false);\nexpect(document.getElementById('login-username-reminder').innerHTML).to.be.equal(\"请输入用户名\");",
            "err": {},
            "isRoot": false,
            "uuid": "703a904d-53e4-45c7-921c-f5d46a764cbe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "元素register隐藏且login-username已输入时应返回true且login-username-reminder应设为空字符串",
            "fullTitle": "onBlur_username测试 元素register隐藏且login-username已输入时应返回true且login-username-reminder应设为空字符串",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register').classList.add('hide');\ndocument.getElementById('login-username').value = 'yzd';\nvar result = onBlur_username();\nexpect(result).to.be.equal(true);\nexpect(document.getElementById('login-username-reminder').innerHTML).to.be.equal(\"\");",
            "err": {},
            "isRoot": false,
            "uuid": "78dde279-5d4a-400b-aa74-6b79feab050f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "元素register未隐藏且register-username未输入时应返回false且register-username-reminder应设为请输入用户名",
            "fullTitle": "onBlur_username测试 元素register未隐藏且register-username未输入时应返回false且register-username-reminder应设为请输入用户名",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register').classList.remove('hide');\nvar result = onBlur_username();\nexpect(result).to.be.equal(false);\nexpect(document.getElementById('register-username-reminder').innerHTML).to.be.equal(\"请输入用户名\");",
            "err": {},
            "isRoot": false,
            "uuid": "dd141898-7b8a-4b4c-b4fe-3d499ea574b3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "元素register未隐藏且register-username已输入时应返回true且register-username-reminder应设为空字符串",
            "fullTitle": "onBlur_username测试 元素register未隐藏且register-username已输入时应返回true且register-username-reminder应设为空字符串",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register').classList.remove('hide');\ndocument.getElementById('register-username').value = 'yzd';\nvar result = onBlur_username();\nexpect(result).to.be.equal(true);\nexpect(document.getElementById('register-username-reminder').innerHTML).to.be.equal(\"\");",
            "err": {},
            "isRoot": false,
            "uuid": "43e305b3-4887-4325-8dde-877f109ab581",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "703a904d-53e4-45c7-921c-f5d46a764cbe",
          "78dde279-5d4a-400b-aa74-6b79feab050f",
          "dd141898-7b8a-4b4c-b4fe-3d499ea574b3",
          "43e305b3-4887-4325-8dde-877f109ab581"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "4b1df5b9-6234-4b43-9fba-dc24b11ec3f8",
        "title": "onBlur_pwd测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\log.test.js",
        "file": "\\test\\log.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "元素register隐藏且login-pwd未输入时应返回false且login-pwd-reminder应设为请输入密码",
            "fullTitle": "onBlur_pwd测试 元素register隐藏且login-pwd未输入时应返回false且login-pwd-reminder应设为请输入密码",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register').classList.add('hide');\nvar result = onBlur_pwd();\nexpect(result).to.be.equal(false);\nexpect(document.getElementById('login-pwd-reminder').innerHTML).to.be.equal(\"请输入密码\");",
            "err": {},
            "isRoot": false,
            "uuid": "7a5acbb0-8ccd-4344-b495-93773958170a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "元素register隐藏且login-pwd已输入时应返回true且login-pwd-reminder应设为空字符串",
            "fullTitle": "onBlur_pwd测试 元素register隐藏且login-pwd已输入时应返回true且login-pwd-reminder应设为空字符串",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register').classList.add('hide');\ndocument.getElementById('login-pwd').value = 'yzd';\nvar result = onBlur_pwd();\nexpect(result).to.be.equal(true);\nexpect(document.getElementById('login-pwd-reminder').innerHTML).to.be.equal(\"\");",
            "err": {},
            "isRoot": false,
            "uuid": "ac4ae3fa-76e9-430b-845f-50e93c5dd385",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "元素register未隐藏且register-pwd未输入时应返回false且register-pwd-reminder应设为请输入密码",
            "fullTitle": "onBlur_pwd测试 元素register未隐藏且register-pwd未输入时应返回false且register-pwd-reminder应设为请输入密码",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register').classList.remove('hide');\nvar result = onBlur_pwd();\nexpect(result).to.be.equal(false);\nexpect(document.getElementById('register-pwd-reminder').innerHTML).to.be.equal(\"请输入密码\");",
            "err": {},
            "isRoot": false,
            "uuid": "810aa8c9-27dc-4b68-8b4b-4ddd6d33c32f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "元素register未隐藏且register-pwd已输入时应返回true且register-pwd-reminder应设为空字符串",
            "fullTitle": "onBlur_pwd测试 元素register未隐藏且register-pwd已输入时应返回true且register-pwd-reminder应设为空字符串",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register').classList.remove('hide');\ndocument.getElementById('register-pwd').value = 'yzd';\nvar result = onBlur_pwd();\nexpect(result).to.be.equal(true);\nexpect(document.getElementById('register-pwd-reminder').innerHTML).to.be.equal(\"\");",
            "err": {},
            "isRoot": false,
            "uuid": "1bf8e3fe-ec51-4180-8c7e-a743fb204afb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7a5acbb0-8ccd-4344-b495-93773958170a",
          "ac4ae3fa-76e9-430b-845f-50e93c5dd385",
          "810aa8c9-27dc-4b68-8b4b-4ddd6d33c32f",
          "1bf8e3fe-ec51-4180-8c7e-a743fb204afb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "29b98613-9e7e-4598-b70a-ffb75a373397",
        "title": "onBlur_confirm_pwd测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\log.test.js",
        "file": "\\test\\log.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "register-confirm-pwd未输入时应返回false且confirm-pwd-reminder应设为请再输入一遍密码！",
            "fullTitle": "onBlur_confirm_pwd测试 register-confirm-pwd未输入时应返回false且confirm-pwd-reminder应设为请再输入一遍密码！",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var result = onBlur_confirm_pwd();\nexpect(result).to.be.equal(false);\nexpect(document.getElementById('confirm-pwd-reminder').innerHTML).to.be.equal(\"请再输入一遍密码！\");",
            "err": {},
            "isRoot": false,
            "uuid": "a1543927-c4e6-4acc-973a-002176f11619",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "register-confirm-pwd已输入但与register-pwd不同时应返回false且confirm-pwd-reminder应设为两次输入密码不一致",
            "fullTitle": "onBlur_confirm_pwd测试 register-confirm-pwd已输入但与register-pwd不同时应返回false且confirm-pwd-reminder应设为两次输入密码不一致",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register-pwd').value = 'yzd';\ndocument.getElementById('register-confirm-pwd').value = 'yzd2';\nvar result = onBlur_confirm_pwd();\nexpect(result).to.be.equal(false);\nexpect(document.getElementById('confirm-pwd-reminder').innerHTML).to.be.equal(\"两次输入密码不一致\");",
            "err": {},
            "isRoot": false,
            "uuid": "e7488b3a-909a-4594-b8f5-0538ccf1f4fc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "register-confirm-pwd已输入且与register-pwd相同时应返回true且confirm-pwd-reminder应设为空字符串",
            "fullTitle": "onBlur_confirm_pwd测试 register-confirm-pwd已输入且与register-pwd相同时应返回true且confirm-pwd-reminder应设为空字符串",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "document.getElementById('register-pwd').value = 'yzd';\ndocument.getElementById('register-confirm-pwd').value = 'yzd';\nvar result = onBlur_confirm_pwd();\nexpect(result).to.be.equal(true);\nexpect(document.getElementById('confirm-pwd-reminder').innerHTML).to.be.equal(\"\");",
            "err": {},
            "isRoot": false,
            "uuid": "8cb9ba3f-9cd7-4420-b9c9-1b0421325a94",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a1543927-c4e6-4acc-973a-002176f11619",
          "e7488b3a-909a-4594-b8f5-0538ccf1f4fc",
          "8cb9ba3f-9cd7-4420-b9c9-1b0421325a94"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "c8b1b38b-c675-44ca-97b7-70262bd55d48",
        "title": "应用启动测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\main.test.js",
        "file": "\\test\\main.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "应用启动测试 \"before each\" hook",
            "timedOut": false,
            "duration": 3321,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "this.app = new Application({\n    path: './Timeline-win32-x64/Timeline.exe'\n});\nreturn this.app.start()",
            "err": {},
            "isRoot": false,
            "uuid": "d31edf6c-8cf3-468f-b03e-f9d04f4b05d5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "应用启动测试 \"after each\" hook",
            "timedOut": false,
            "duration": 1062,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "if (this.app && this.app.isRunning()) {\n    return this.app.stop()\n}",
            "err": {},
            "isRoot": false,
            "uuid": "a0077bd1-481a-4bda-9b7d-10677af9e1b2",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "应打开一个窗口",
            "fullTitle": "应用启动测试 应打开一个窗口",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "return this.app.client.getWindowCount().then(function (count) {\n    expect(count).to.be.equal(1);\n})",
            "err": {},
            "isRoot": false,
            "uuid": "2bbad867-d40f-4827-a7fb-70de9ab01cdf",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2bbad867-d40f-4827-a7fb-70de9ab01cdf"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 8,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "5a160fba-f8e7-43ce-93da-a3ded3a1d85f",
        "title": "refresh测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\timeline.test.js",
        "file": "\\test\\timeline.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "li元素数量应大于6，第6条li应未被隐藏，第7条li应被隐藏，bt-load应未被隐藏",
            "fullTitle": "refresh测试 li元素数量应大于6，第6条li应未被隐藏，第7条li应被隐藏，bt-load应未被隐藏",
            "timedOut": false,
            "duration": 3082,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "refresh();\nvar list = $(\"#timelines\");\nvar count = ($(\"li\").length);\nexpect(count).to.be.above(6);\nexpect(list.children(\"li:eq(5)\").hasClass(\"hide\")).to.be.equal(false);\nexpect(list.children(\"li:eq(6)\").hasClass(\"hide\")).to.be.equal(true);\nexpect(document.getElementById('bt-load').classList.contains('hide')).to.be.equal(false);",
            "err": {},
            "isRoot": false,
            "uuid": "7961a061-d7fe-4b0c-91d5-a589d1c0bf59",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7961a061-d7fe-4b0c-91d5-a589d1c0bf59"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3082,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "cdea63e1-95eb-4ed8-bdb6-4491647d61f8",
        "title": "showMore测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\timeline.test.js",
        "file": "\\test\\timeline.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "第7个子元素隐藏时应将所有子元素取消隐藏且bt-load显示收起",
            "fullTitle": "showMore测试 第7个子元素隐藏时应将所有子元素取消隐藏且bt-load显示收起",
            "timedOut": false,
            "duration": 47,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var list = document.getElementById('timelines').childNodes;\nvar len = list.length;\nlist.item(6).classList.add('hide');\nshowMore();\nexpect($(\"#timelines\").children(\"li\").hasClass('hide')).to.be.equal(false);\nexpect($('#bt-load').text()).to.be.equal(\"收起\");",
            "err": {},
            "isRoot": false,
            "uuid": "a9619d42-6943-4459-97d6-a005cee994f7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "第7个子元素未隐藏时应将第7个及之后的子元素隐藏且bt-load显示更多...",
            "fullTitle": "showMore测试 第7个子元素未隐藏时应将第7个及之后的子元素隐藏且bt-load显示更多...",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var list = document.getElementById('timelines').childNodes;\nvar len = list.length;\nlist.item(6).classList.remove('hide');\nshowMore();\nexpect($(\"#timelines\").children(\"li:eq(6)\").hasClass('hide')).to.be.equal(true);\nexpect($(\"#timelines\").children(\"li:last-child\").hasClass('hide')).to.be.equal(true)\nexpect($('#bt-load').text()).to.be.equal(\"更多...\");",
            "err": {},
            "isRoot": false,
            "uuid": "01ba440b-cd39-4c03-ac21-a0d76df11209",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a9619d42-6943-4459-97d6-a005cee994f7",
          "01ba440b-cd39-4c03-ac21-a0d76df11209"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 78,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "37033133-7dfb-429e-9ebf-858b96fadbe9",
        "title": "getCookie测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\util\\cookie.test.js",
        "file": "\\test\\util\\cookie.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "getCookie测试 \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "//清空cookie\nwindow.mockData.user[\"username\"] = \"\";",
            "err": {},
            "isRoot": false,
            "uuid": "6a1b58c5-2c1c-422d-86a6-ac3d80bcdb7c",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "未设置cookie时应返回空字符串",
            "fullTitle": "getCookie测试 未设置cookie时应返回空字符串",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var cookie = getCookie();\nexpect(cookie).to.be.equal('');",
            "err": {},
            "isRoot": false,
            "uuid": "5a14b6be-49f9-47fd-bf2a-aaf26e9a027c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "设置了cookie时应返回设置内容",
            "fullTitle": "getCookie测试 设置了cookie时应返回设置内容",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "window.mockData.user[\"username\"] = 'yzd';\nvar cookie = getCookie();\nexpect(cookie).to.be.equal('yzd');",
            "err": {},
            "isRoot": false,
            "uuid": "eda50f6c-b49e-44db-98eb-54f3425b0b9b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5a14b6be-49f9-47fd-bf2a-aaf26e9a027c",
          "eda50f6c-b49e-44db-98eb-54f3425b0b9b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "3e6c7f76-1dbe-408b-9d42-23c2026feb56",
        "title": "setCookie测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\util\\cookie.test.js",
        "file": "\\test\\util\\cookie.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "setCookie测试 \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "//清空cookie\nwindow.mockData.user[\"username\"] = \"\";",
            "err": {},
            "isRoot": false,
            "uuid": "5b53f7dc-4dae-47cd-9d4d-47e64bfb6d83",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "setCookie后cookie中username应正确设置",
            "fullTitle": "setCookie测试 setCookie后cookie中username应正确设置",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "setCookie('yzd');\nvar user = window.mockData.user[\"username\"];\nexpect(user).to.be.equal('yzd');",
            "err": {},
            "isRoot": false,
            "uuid": "12caa189-75c8-46b4-9394-a03bf109c75c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "12caa189-75c8-46b4-9394-a03bf109c75c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "242501c7-6a36-4168-bb6b-6631f93b3a2a",
        "title": "clearCookie测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\util\\cookie.test.js",
        "file": "\\test\\util\\cookie.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "clearCookie测试 \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "window.mockData.user[\"username\"] = 'yzd';",
            "err": {},
            "isRoot": false,
            "uuid": "b5cc0c95-4e35-4cc7-9e8c-5d6191b469b8",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "clearCookie后cookie中username应为空字符串",
            "fullTitle": "clearCookie测试 clearCookie后cookie中username应为空字符串",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "clearCookie();\nvar user = null;\nuser = window.mockData.user[\"username\"];\nexpect(user).to.be.equal('');",
            "err": {},
            "isRoot": false,
            "uuid": "025c630a-4a6a-453e-b19f-4ccdb6bb5447",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "025c630a-4a6a-453e-b19f-4ccdb6bb5447"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "add03caa-62d1-41e6-8456-46c21d5cb97f",
        "title": "checkCookie测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\util\\cookie.test.js",
        "file": "\\test\\util\\cookie.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "checkCookie测试 \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "//清空cookie\nwindow.mockData.user[\"username\"] = \"\";",
            "err": {},
            "isRoot": false,
            "uuid": "20782e16-cc54-4eb7-8383-f87e87a20c86",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "cookie中无user时log-status内应设置为登录",
            "fullTitle": "checkCookie测试 cookie中无user时log-status内应设置为登录",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "window.mockData.user[\"username\"] = '';\ncheckCookie();\nexpect(document.getElementById('log-status').innerText).to.be.equal('登录');",
            "err": {},
            "isRoot": false,
            "uuid": "b6b44362-d972-4d6d-86f5-525e8ac2292f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "cookie中有user时log-status内应设置为user内容",
            "fullTitle": "checkCookie测试 cookie中有user时log-status内应设置为user内容",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "window.mockData.user[\"username\"] = 'yzd';\ncheckCookie();\nexpect(document.getElementById('log-status').innerText).to.be.equal('yzd');",
            "err": {},
            "isRoot": false,
            "uuid": "66e56c02-2c57-41f1-b26d-3246e1df2aa9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b6b44362-d972-4d6d-86f5-525e8ac2292f",
          "66e56c02-2c57-41f1-b26d-3246e1df2aa9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 16,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "e5e03037-c636-41f1-a4b4-e3b9feb2f72e",
        "title": "timeTrans测试",
        "fullFile": "D:\\软件测试\\期末项目\\timeline-software-testing\\electron-timeline\\test\\util\\timeline-item.test.js",
        "file": "\\test\\util\\timeline-item.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "输入距现在一分钟内的时间戳应返回刚刚",
            "fullTitle": "timeTrans测试 输入距现在一分钟内的时间戳应返回刚刚",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var time = new Date().getTime();\nvar result = timeTrans(time);\nexpect(result).to.be.equal('刚刚');",
            "err": {},
            "isRoot": false,
            "uuid": "296aed0d-86aa-43d3-9dd4-20f923ea5d59",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "输入距现在30分钟到31分钟的时间戳应返回30分钟前",
            "fullTitle": "timeTrans测试 输入距现在30分钟到31分钟的时间戳应返回30分钟前",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var time = new Date().getTime() - 30*60*1000;\nvar result = timeTrans(time);\nexpect(result).to.be.equal('30分钟前');",
            "err": {},
            "isRoot": false,
            "uuid": "4afd0a29-3012-40ff-983d-62cd806f122e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "输入距现在2小时到3小时的时间戳应返回2小时前",
            "fullTitle": "timeTrans测试 输入距现在2小时到3小时的时间戳应返回2小时前",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var time = new Date().getTime() - 2*60*60*1000;\nvar result = timeTrans(time);\nexpect(result).to.be.equal('2小时前');",
            "err": {},
            "isRoot": false,
            "uuid": "f1b96d61-6e59-4fa9-88f6-ff7d7f268ed5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "输入距现在2天到3天的时间戳应返回2天前",
            "fullTitle": "timeTrans测试 输入距现在2天到3天的时间戳应返回2天前",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var time = new Date().getTime() - 2*24*60*60*1000;\nvar result = timeTrans(time);\nexpect(result).to.be.equal('2天前');",
            "err": {},
            "isRoot": false,
            "uuid": "d48b89cc-3d7a-4b9b-a2d7-d33852a54bb1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "输入距现在2周到3周的时间戳应返回2周前",
            "fullTitle": "timeTrans测试 输入距现在2周到3周的时间戳应返回2周前",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var time = new Date().getTime() - 2*7*24*60*60*1000;\nvar result = timeTrans(time);\nexpect(result).to.be.equal('2周前');",
            "err": {},
            "isRoot": false,
            "uuid": "18d99559-6006-40e9-a8d1-5a5028dcc0b8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "输入距现在2月到3月的时间戳应返回2月前",
            "fullTitle": "timeTrans测试 输入距现在2月到3月的时间戳应返回2月前",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var time = new Date().getTime() - 2*30*24*60*60*1000;\nvar result = timeTrans(time);\nexpect(result).to.be.equal('2月前');",
            "err": {},
            "isRoot": false,
            "uuid": "3934e2fe-927f-4a49-917e-78ee9fddf4fa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "输入距现在一年前的时间戳应返回时间戳表示的日期",
            "fullTitle": "timeTrans测试 输入距现在一年前的时间戳应返回时间戳表示的日期",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var time = new Date().getTime() - 13*30*7*24*60*60*1000;\nvar result = timeTrans(time);\nvar date = new Date(time);\nvar expectResult = date.getFullYear() + \"/\" + date.getMonth() + \"/\" + date.getDate();\nexpect(result).to.be.equal(expectResult);",
            "err": {},
            "isRoot": false,
            "uuid": "e70e2bf0-0da3-4cbb-90cd-9d9f3dcdd01f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "296aed0d-86aa-43d3-9dd4-20f923ea5d59",
          "4afd0a29-3012-40ff-983d-62cd806f122e",
          "f1b96d61-6e59-4fa9-88f6-ff7d7f268ed5",
          "d48b89cc-3d7a-4b9b-a2d7-d33852a54bb1",
          "18d99559-6006-40e9-a8d1-5a5028dcc0b8",
          "3934e2fe-927f-4a49-917e-78ee9fddf4fa",
          "e70e2bf0-0da3-4cbb-90cd-9d9f3dcdd01f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2019
}